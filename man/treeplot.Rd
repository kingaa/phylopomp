% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeplot.R
\name{treeplot}
\alias{treeplot}
\alias{plot.gpsim}
\title{Fancy tree plotter}
\usage{
\method{plot}{gpsim}(x, ..., time, t0, prune = TRUE, obscure = TRUE)

treeplot(
  tree,
  time = NULL,
  t0 = 0,
  ladderize = TRUE,
  points = FALSE,
  ...,
  palette = scales::hue_pal(l = 30, h = c(220, 580))
)
}
\arguments{
\item{x}{object of class \sQuote{gpsim}}

\item{...}{\code{plot} passes extra arguments to \code{\link{treeplot}}.
\code{treeplot} passes extra arguments to \code{\link[ggplot2]{theme}}.}

\item{time}{numeric; time of the genealogy.}

\item{t0}{numeric; time of the root.}

\item{prune}{logical; prune the genealogy?}

\item{obscure}{logical; obscure the demes?}

\item{tree}{character; tree representation in Newick format.}

\item{ladderize}{Ladderize?}

\item{points}{Show nodes and tips?}

\item{palette}{color palette for branches.
This can be furnished either as a function or a vector of colors.
If this is a function, it should take a single integer argument, the number of colors required.
If it is a vector, it should have at least as many elements as there are demes in the genealogy.}
}
\value{
A printable \code{ggplot} object.
}
\description{
Plots a genealogical tree.
}
\examples{
\dontrun{
  library(ggplot2)
  times <- seq(from=0,to=8,by=0.1)[-1]

  png_files <- sprintf(
    file.path(tempdir(),"frame\%05d.png"),
    seq_along(times)
  )

  pb <- utils::txtProgressBar(0,length(times),0,style=3)
  x <- simulate("SIIR",time=0,Beta1=5,Beta2=10,gamma=1,delta=0.5,
    psi1=0.2,psi2=0.1,sigma12=1,sigma21=1,S0=200,I1_0=3,I2_0=2)
  for (k in seq_len(length(times))) {
    x <- simulate(x,time=times[k])
    ggsave(
      filename=png_files[k],
      plot=plot(
        x, t0=0, time=max(times),
        points=FALSE, prune=FALSE, obscure=FALSE,
        palette=c("#ffcb05","#dddddd"),
        axis.line=element_line(color="white"),
        axis.ticks=element_line(color="white"),
        axis.text=element_blank(),
        plot.background=element_rect(fill=NA,color=NA),
        panel.background=element_rect(fill=NA,color=NA)
      ),
      device="png",dpi=300,
      height=2,width=3,units="in"
    )
    setTxtProgressBar(pb,k)
  }

  library(gifski)
  gif_file <- "movie1.gif"
  gifski(png_files,gif_file,delay=0.02,loop=TRUE)
  unlink(png_files)
}

}
